{"ast":null,"code":"var _jsxFileName = \"/home/ffelix07/Documents/labRemoto_Front/src/context/rosContext.js\",\n  _s = $RefreshSig$();\nimport ROSLIB from 'roslib';\nimport { createContext } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const rosContext = /*#__PURE__*/createContext();\nexport function RosProvider(props) {\n  _s();\n  const [status, setStatus] = useState(\"Not connected\");\n  const [isConnected, setIsConnected] = useState(false);\n  const defaultConfiguration = {\n    url: 'ws://localhost:9090'\n  };\n  const ros = new ROSLIB.Ros({\n    encoding: 'ascii',\n    url: defaultConfiguration.url\n  });\n  ros.on(\"connection\", function () {\n    setStatus(\"connected\");\n    setIsConnected(true);\n  });\n  ros.on(\"close\", function () {\n    setStatus(\"Not connected\");\n    setIsConnected(false);\n  });\n  ros.on(\"error\", function (error) {\n    console.log(\"Error connecting to websocket server: \", error);\n  });\n  const fileTopic = new ROSLIB.Topic({\n    ros: ros,\n    name: '/top_transacciones_entrada',\n    messageType: 'my_mas/msg/TransEntrada'\n  });\n  function pubMessage() {\n    const msg = new ROSLIB.Message({\n      tipotransaccion: 'CargaHex',\n      status: 'Peticion',\n      idestudiante: '1',\n      idsesion: '1',\n      descripcion: ''\n    });\n    fileTopic.publish(msg);\n  }\n  const listener = new ROSLIB.Topic({\n    ros: ros,\n    name: '/top_consola',\n    messageType: 'my_mas/msg/LogSalida'\n  });\n  listener.subscribe(function (message) {\n    console.log(\"Received message on \" + listener.name + \": \" + message.file);\n    listener.unsubscribe();\n  });\n  return /*#__PURE__*/_jsxDEV(rosContext.Provider, {\n    value: {\n      ros,\n      status,\n      isConnected,\n      pubMessage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(RosProvider, \"LlgG/DobYuUNZh/LWI2WVM2uJnE=\");\n_c = RosProvider;\nvar _c;\n$RefreshReg$(_c, \"RosProvider\");","map":{"version":3,"names":["ROSLIB","createContext","useState","jsxDEV","_jsxDEV","rosContext","RosProvider","props","_s","status","setStatus","isConnected","setIsConnected","defaultConfiguration","url","ros","Ros","encoding","on","error","console","log","fileTopic","Topic","name","messageType","pubMessage","msg","Message","tipotransaccion","idestudiante","idsesion","descripcion","publish","listener","subscribe","message","file","unsubscribe","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ffelix07/Documents/labRemoto_Front/src/context/rosContext.js"],"sourcesContent":["\nimport ROSLIB from 'roslib';\nimport { createContext } from 'react';\nimport { useState } from 'react';\n\nexport const rosContext = createContext();\n\n\nexport function RosProvider(props) {\n  const [status, setStatus] = useState(\"Not connected\");\n  const [isConnected, setIsConnected] = useState(false);\n  const defaultConfiguration = {\n    url: 'ws://localhost:9090',\n  };\n  const ros = new ROSLIB.Ros({encoding: 'ascii', url: defaultConfiguration.url});\n\n  ros.on(\"connection\", function() {\n    setStatus(\"connected\");\n    setIsConnected(true);\n  })\n\n  ros.on(\"close\", function() {\n    setStatus(\"Not connected\");\n    setIsConnected(false);\n  })\n\n  ros.on(\"error\", function(error) {\n    console.log(\"Error connecting to websocket server: \", error);\n  })\n\n  const fileTopic = new ROSLIB.Topic({\n    ros : ros,\n    name : '/top_transacciones_entrada',\n    messageType : 'my_mas/msg/TransEntrada'\n  });\n\n  function pubMessage(){\n    const msg = new ROSLIB.Message({\n      tipotransaccion : 'CargaHex',\n      status : 'Peticion',\n      idestudiante : '1',\n      idsesion : '1',\n      descripcion : ''\n    });\n    fileTopic.publish(msg);\n  }\n\n  const listener = new ROSLIB.Topic({\n    ros : ros,\n    name : '/top_consola',\n    messageType : 'my_mas/msg/LogSalida'\n  });\n\n  listener.subscribe( function(message) {\n    console.log(\"Received message on \" + listener.name + \": \" + message.file);\n    listener.unsubscribe();\n  });\n\n\n  return (\n    <rosContext.Provider value={{ros, status, isConnected, pubMessage}}>\n      {props.children}\n    </rosContext.Provider>\n  );\n\n}"],"mappings":";;AACA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,CAAC;AAGzC,OAAO,SAASK,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,eAAe,CAAC;EACrD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMW,oBAAoB,GAAG;IAC3BC,GAAG,EAAE;EACP,CAAC;EACD,MAAMC,GAAG,GAAG,IAAIf,MAAM,CAACgB,GAAG,CAAC;IAACC,QAAQ,EAAE,OAAO;IAAEH,GAAG,EAAED,oBAAoB,CAACC;EAAG,CAAC,CAAC;EAE9EC,GAAG,CAACG,EAAE,CAAC,YAAY,EAAE,YAAW;IAC9BR,SAAS,CAAC,WAAW,CAAC;IACtBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC,CAAC;EAEFG,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,YAAW;IACzBR,SAAS,CAAC,eAAe,CAAC;IAC1BE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,CAAC;EAEFG,GAAG,CAACG,EAAE,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,KAAK,CAAC;EAC9D,CAAC,CAAC;EAEF,MAAMG,SAAS,GAAG,IAAItB,MAAM,CAACuB,KAAK,CAAC;IACjCR,GAAG,EAAGA,GAAG;IACTS,IAAI,EAAG,4BAA4B;IACnCC,WAAW,EAAG;EAChB,CAAC,CAAC;EAEF,SAASC,UAAUA,CAAA,EAAE;IACnB,MAAMC,GAAG,GAAG,IAAI3B,MAAM,CAAC4B,OAAO,CAAC;MAC7BC,eAAe,EAAG,UAAU;MAC5BpB,MAAM,EAAG,UAAU;MACnBqB,YAAY,EAAG,GAAG;MAClBC,QAAQ,EAAG,GAAG;MACdC,WAAW,EAAG;IAChB,CAAC,CAAC;IACFV,SAAS,CAACW,OAAO,CAACN,GAAG,CAAC;EACxB;EAEA,MAAMO,QAAQ,GAAG,IAAIlC,MAAM,CAACuB,KAAK,CAAC;IAChCR,GAAG,EAAGA,GAAG;IACTS,IAAI,EAAG,cAAc;IACrBC,WAAW,EAAG;EAChB,CAAC,CAAC;EAEFS,QAAQ,CAACC,SAAS,CAAE,UAASC,OAAO,EAAE;IACpChB,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGa,QAAQ,CAACV,IAAI,GAAG,IAAI,GAAGY,OAAO,CAACC,IAAI,CAAC;IACzEH,QAAQ,CAACI,WAAW,CAAC,CAAC;EACxB,CAAC,CAAC;EAGF,oBACElC,OAAA,CAACC,UAAU,CAACkC,QAAQ;IAACC,KAAK,EAAE;MAACzB,GAAG;MAAEN,MAAM;MAAEE,WAAW;MAAEe;IAAU,CAAE;IAAAe,QAAA,EAChElC,KAAK,CAACkC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAG1B;AAACrC,EAAA,CAzDeF,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}