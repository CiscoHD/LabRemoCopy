{"ast":null,"code":"var _jsxFileName = \"/home/ffelix07/Documents/LabRemo/web_site/labRemoto_Front/src/pages/RosTest.js\",\n  _s = $RefreshSig$();\nimport \"./RosTest.css\";\nimport React, { useEffect, useContext } from \"react\";\nimport ContNavBar from '../components/ContNavBar';\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport { rosContext } from \"../context/rosContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RosTest() {\n  _s();\n  const ros = useContext(rosContext);\n\n  /**\n   * Path del archivo .hex y el puerto \n   * Se deben obtener a partir de una petición a la base de datos\n   * con la dirección en donde se guardó en el servidor.\n   */\n  const hex_path = \"/media/abrahamrh/Universidad/Servicio_social/Web-test/arduino_test.ino.hex\";\n  const port = \"/dev/ttyUSB0\";\n  const handleOnClick = () => {\n    ros.pubMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ContNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"title justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prueba de conexi\\xF3n con ROS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"La prueba consiste en mandar un archivo .hex a la placa de arduino, el cual contiene un programa que hace que el led de la placa parpadee.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [ros.isConnected === false && /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"secondary\",\n            children: \"Sin conexi\\xF3n.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), ros.isConnected === true && /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            children: \"Conexi\\xF3n activa.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleOnClick,\n          children: \"Enviar programa a arduino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(RosTest, \"Qy0fBqVdgXUCqtg5TF+gZhRAU9Q=\");\n_c = RosTest;\nexport default RosTest;\nvar _c;\n$RefreshReg$(_c, \"RosTest\");","map":{"version":3,"names":["React","useEffect","useContext","ContNavBar","Container","Row","Col","Button","Alert","rosContext","jsxDEV","_jsxDEV","Fragment","_Fragment","RosTest","_s","ros","hex_path","port","handleOnClick","pubMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","isConnected","xs","lg","variant","onClick","_c","$RefreshReg$"],"sources":["/home/ffelix07/Documents/LabRemo/web_site/labRemoto_Front/src/pages/RosTest.js"],"sourcesContent":["import \"./RosTest.css\"\nimport React, { useEffect, useContext} from \"react\";\nimport ContNavBar from '../components/ContNavBar';\nimport {Container, Row, Col, Button, Alert} from 'react-bootstrap';\nimport { rosContext } from \"../context/rosContext\";\n\nfunction RosTest() {\n  const ros = useContext(rosContext);\n\n  /**\n   * Path del archivo .hex y el puerto \n   * Se deben obtener a partir de una petición a la base de datos\n   * con la dirección en donde se guardó en el servidor.\n   */\n  const hex_path = \"/media/abrahamrh/Universidad/Servicio_social/Web-test/arduino_test.ino.hex\";\n  const port = \"/dev/ttyUSB0\";\n\n  const handleOnClick = () => {\n    ros.pubMessage();\n  }\n\n  return (\n    <>\n    <ContNavBar />\n    <Container >\n      <Row className=\"title justify-content-md-center\">\n        <h3>Prueba de conexión con ROS</h3>\n      </Row>\n      <Row>\n        <p>\n          La prueba consiste en mandar un archivo .hex a la placa de arduino, el cual contiene un programa que hace que el led de la placa parpadee.\n        </p>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        { ros.isConnected === false &&\n          <Col xs lg=\"2\">\n          <Alert variant=\"secondary\">\n            Sin conexión.\n          </Alert>\n          </Col>\n        }\n        {\n          ros.isConnected === true &&\n          <Col xs lg=\"2\">\n          <Alert variant=\"success\">\n            Conexión activa.\n          </Alert>\n          </Col>\n        }\n      </Row>\n      <Row>\n        <Button onClick={handleOnClick}>\n          Enviar programa a arduino\n        </Button>\n      </Row>\n    </Container>\n    </>\n  );\n}\n\nexport default RosTest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}